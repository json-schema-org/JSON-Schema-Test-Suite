[
    {
        "description": "by int",
        "schema": {"multipleOf": 2},
        "tests": [
            {
                "description": "int by int",
                "data": 10,
                "valid": true
            },
            {
                "description": "int by int fail",
                "data": 7,
                "valid": false
            },
            {
                "description": "ignores non-numbers",
                "data": "foo",
                "valid": true
            }
        ]
    },
    {
        "description": "by number",
        "schema": {"multipleOf": 1.5},
        "tests": [
            {
                "description": "zero is multiple of anything",
                "data": 0,
                "valid": true
            },
            {
                "description": "4.5 is multiple of 1.5",
                "data": 4.5,
                "valid": true
            },
            {
                "description": "35 is not multiple of 1.5",
                "data": 35,
                "valid": false
            }
        ]
    },
    {
        "description": "by fractional number above 1",
        "schema": {"multipleOf": 1.1},
        "tests": [
            {"description": "zero is multiple of anything", "data": 0, "valid": true},
            {"description": "1.1 is multiple of itself", "data": 1.1, "valid": true},
            {"description": "3.3 is multiple of 1.1", "data": 3.3, "valid": true},
            {"description": "6.6 is multiple of 1.1", "data": 6.6, "valid": true},
            {"description": "7.7 is multiple of 1.1", "data": 7.7, "valid": true},
            {"description": "1.2 is not multiple of 1.1", "data": 1.2, "valid": false}
        ]
    },
    {
        "description": "by number below 1",
        "schema": {"multipleOf": 0.1},
        "tests": [
            {"description": "zero is multiple of anything", "data": 0, "valid": true},
            {"description": "0.1 is multiple of itself", "data": 0.1, "valid": true},
            {"description": "0.3 is multiple of 0.1", "data": 0.3, "valid": true},
            {"description": "0.6 is multiple of 0.1", "data": 0.6, "valid": true},
            {"description": "0.7 is multiple of 0.1", "data": 0.7, "valid": true},
            {"description": "0.35 is not multiple of 0.1", "data": 0.35, "valid": false}
        ]
    },
    {
        "description": "by another number below 1",
        "schema": {"multipleOf": 0.01},
        "tests": [
            {"description": "zero is multiple of anything", "data": 0, "valid": true},
            {"description": "0.01 is multiple of itself", "data": 0.01, "valid": true},
            {"description": "0.03 is multiple of 0.01", "data": 0.03, "valid": true},
            {"description": "0.06 is multiple of 0.01", "data": 0.06, "valid": true},
            {"description": "0.07 is multiple of 0.01", "data": 0.07, "valid": true},
            {"description": "0.035 is not multiple of 0.01", "data": 0.035, "valid": false}
        ]
    },
    {
        "description": "by small number",
        "schema": {"multipleOf": 0.0001},
        "tests": [
            {
                "description": "0.0075 is multiple of 0.0001",
                "data": 0.0075,
                "valid": true
            },
            {
                "description": "0.00751 is not multiple of 0.0001",
                "data": 0.00751,
                "valid": false
            }
        ]
    },
    {
        "description": "float division = inf",
        "schema": {"type": "integer", "multipleOf": 0.123456789},
        "tests": [
            {
                "description": "always invalid, but naive implementations may raise an overflow error",
                "data": 1e308,
                "valid": false
            }
        ]
    },
    {
        "description": "small multiple of large integer",
        "schema": {"type": "integer", "multipleOf": 1e-8},
        "tests": [
            {
                "description": "any integer is a multiple of 1e-8",
                "data": 12391239123,
                "valid": true
            }
        ]
    }
]
