[
    {
        "description": "$dynamicRef without $dynamicAnchor works like $ref",
        "schema": {
            "$anchor": "foo",
            "properties": {
                "foo": { "$dynamicRef": "#foo" }
            },
            "additionalProperties": false
        },
        "tests": [
            {
                "description": "match",
                "data": {"foo": false},
                "valid": true
            },
            {
                "description": "recursive match",
                "data": { "foo": { "foo": false } },
                "valid": true
            },
            {
                "description": "mismatch",
                "data": { "bar": false },
                "valid": false
            },
            {
                "description": "recursive mismatch",
                "data": { "foo": { "bar": false } },
                "valid": false
            }
        ]
    },
    {
        "description": "$dynamicRef without using nesting",
        "schema": {
            "$id": "http://localhost:4242/dynamicRef2/schema.json",
            "$defs": {
                "myobject": {
                    "$id": "myobject.json",
                    "$dynamicAnchor": "foo",
                    "anyOf": [
                        { "type": "string" },
                        {
                            "type": "object",
                            "additionalProperties": { "$dynamicRef": "#foo" }
                        }
                    ]
                }
            },
            "anyOf": [
                { "type": "integer" },
                { "$ref": "#/$defs/myobject" }
            ]
        },
        "tests": [
            {
                "description": "integer matches at the outer level",
                "data": 1,
                "valid": true
            },
            {
                "description": "single level match",
                "data": { "foo": "hi" },
                "valid": true
            },
            {
                "description": "integer does not match as a property value",
                "data": { "foo": 1 },
                "valid": false
            },
            {
                "description": "two levels, properties match with inner definition",
                "data": { "foo": { "bar": "hi" } },
                "valid": true
            },
            {
                "description": "two levels, no match",
                "data": { "foo": { "bar": 1 } },
                "valid": false
            }
        ]
    },
    {
        "description": "$dynamicRef with nesting",
        "schema": {
            "$id": "http://localhost:4242/dynamicRef3/schema.json",
            "$dynamicAnchor": "foo",
            "$defs": {
                "myobject": {
                    "$id": "myobject.json",
                    "$dynamicAnchor": "foo",
                    "anyOf": [
                        { "type": "string" },
                        {
                            "type": "object",
                            "additionalProperties": { "$dynamicRef": "#foo" }
                        }
                    ]
                }
            },
            "anyOf": [
                { "type": "integer" },
                { "$ref": "#/$defs/myobject" }
            ]
        },
        "tests": [
            {
                "description": "integer matches at the outer level",
                "data": 1,
                "valid": true
            },
            {
                "description": "single level match",
                "data": { "foo": "hi" },
                "valid": true
            },
            {
                "description": "integer now matches as a property value",
                "data": { "foo": 1 },
                "valid": true
            },
            {
                "description": "two levels, properties match with inner definition",
                "data": { "foo": { "bar": "hi" } },
                "valid": true
            },
            {
                "description": "two levels, properties match with $dynamicRef",
                "data": { "foo": { "bar": 1 } },
                "valid": true
            }
        ]
    },
    {
        "description": "$dynamicRef with no $dynamicAnchor in the initial target schema resource",
        "schema": {
            "$id": "http://localhost:4242/dynamicRef6/base.json",
            "$dynamicAnchor": "foo",
            "anyOf": [
                { "type": "boolean" },
                {
                    "type": "object",
                    "additionalProperties": {
                        "$id": "http://localhost:4242/dynamicRef6/inner.json",
                        "$comment": "there is no $dynamicAnchor: true here, so we do NOT recurse to the base",
                        "$anchor": "foo",
                        "anyOf": [
                            { "type": "integer" },
                            { "type": "object", "additionalProperties": { "$dynamicRef": "#foo" } }
                        ]
                    }
                }
            ]
        },
        "tests": [
            {
                "description": "leaf node does not match; no recursion",
                "data": { "foo": true },
                "valid": false
            },
            {
                "description": "leaf node matches: recursion uses the inner schema",
                "data": { "foo": { "bar": 1 } },
                "valid": true
            },
            {
                "description": "leaf node does not match: recursion uses the inner schema",
                "data": { "foo": { "bar": true } },
                "valid": false
            }
        ]
    },
    {
        "description": "$dynamicRef with no $dynamicAnchor in the outer schema resource",
        "schema": {
            "$id": "http://localhost:4242/dynamicRef7/base.json",
            "anyOf": [
                { "type": "boolean" },
                {
                    "type": "object",
                    "additionalProperties": {
                        "$id": "http://localhost:4242/dynamicRef7/inner.json",
                        "$dynamicAnchor": "foo",
                        "anyOf": [
                            { "type": "integer" },
                            { "type": "object", "additionalProperties": { "$dynamicRef": "#foo" } }
                        ]
                    }
                }
            ]
        },
        "tests": [
            {
                "description": "leaf node does not match; no recursion",
                "data": { "foo": true },
                "valid": false
            },
            {
                "description": "leaf node matches: recursion only uses inner schema",
                "data": { "foo": { "bar": 1 } },
                "valid": true
            },
            {
                "description": "leaf node does not match: recursion only uses inner schema",
                "data": { "foo": { "bar": true } },
                "valid": false
            }
        ]
    },
    {
        "description": "multiple dynamic paths to the $dynamicRef keyword",
        "schema": {
            "$id": "dynamicRef8_main.json",
            "$defs": {
                "inner": {
                    "$id": "dynamicRef8_inner.json",
                    "$dynamicAnchor": "foo",
                    "title": "inner",
                    "additionalProperties": {
                        "$dynamicRef": "#foo"
                    }
                }
            },
            "if": {
                "propertyNames": {
                    "pattern": "^[a-m]"
                }
            },
            "then": {
                "title": "any type of node",
                "$id": "dynamicRef8_anyLeafNode.json",
                "$dynamicAnchor": "foo",
                "$ref": "dynamicRef8_main.json#/$defs/inner"
            },
            "else": {
                "title": "integer node",
                "$id": "dynamicRef8_integerNode.json",
                "$dynamicAnchor": "foo",
                "type": [ "object", "integer" ],
                "$ref": "dynamicRef8_main.json#/$defs/inner"
            }
        },
        "tests": [
            {
                "description": "recurse to anyLeafNode - floats are allowed",
                "data": { "alpha": 1.1 },
                "valid": true
            },
            {
                "description": "recurse to integerNode - floats are not allowed",
                "data": { "november": 1.1 },
                "valid": false
            }
        ]
    },
    {
        "description": "$dynamicRef to other resource resolving to current resource",
        "schema": {
            "$id": "dynamicRef9_main.json",
            "$dynamicAnchor": "foo",
            "type": "object",
            "properties": {
                "vanilla": {
                    "$comment": "This should resolve to other.json normally",
                    "$ref": "other.json#foo"
                },
                "dynamic": {
                    "$comment": "This should resolve to dynamicRef9_main.json#foo",
                    "$dynamicRef": "other.json#foo"
                }
            },
            "additionalProperties": false,
            "$defs": {
                "Other": {
                    "$id": "other.json",
                    "$dynamicAnchor": "foo",
                    "$comment": "If this schema is evaluated, it will fail validation",
                    "not": true
                }
            }
        },
        "tests": [
            {
                "description": "vanilla $ref evaluates the other schema",
                "data": { "vanilla": {} },
                "valid": false
            },
            {
                "description": "$dynamicRef evaluates to root $dynamicAnchor",
                "data": { "dynamic": {} },
                "valid": true
            }
        ]
    }
]
