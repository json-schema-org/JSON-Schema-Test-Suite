[
    {
        "description": "maxContains without contains is ignored",
        "schema": {
            "maxContains": 1
        },
        "tests": [
            {
                "description": "one item valid against lone maxContains",
                "data": [ 1 ],
                "valid": true
            },
            {
                "description": "two items still valid against lone maxContains",
                "data": [ 1, 2 ],
                "valid": true
            }
        ]
    },
    {
        "description": "maxContains with contains",
        "schema": {
            "contains": {"const": 1},
            "maxContains": 1
        },
        "tests": [
            {
                "description": "empty data",
                "data": [ ],
                "valid": false
            },
            {
                "description": "all elements match, valid maxContains",
                "data": [ 1 ],
                "valid": true
            },
            {
                "description": "all elements match, invalid maxContains",
                "data": [ 1, 1 ],
                "valid": false
            },
            {
                "description": "some elements match, valid maxContains",
                "data": [ 1, 2 ],
                "valid": true
            },
            {
                "description": "some elements match, invalid maxContains",
                "data": [ 1, 2, 1 ],
                "valid": false
            }
        ]
    },
    {
        "description": "minContains < maxContains",
        "schema": {
            "contains": {"const": 1},
            "minContains": 1,
            "maxContains": 3
        },
        "tests": [
            {
                "description": "actual < minContains < maxContains",
                "data": [ ],
                "valid": false
            },
            {
                "description": "minContains < actual < maxContains",
                "data": [ 1, 1 ],
                "valid": true
            },
            {
                "description": "minContains < maxContains < actual",
                "data": [ 1, 1, 1, 1 ],
                "valid": false
            }
        ]
    },
    {
        "description": "Meta-schema validation tests: arrays",
        "schema": {
            "$ref": "https://json-schema.org/draft/2019-09/schema"
        },
        "tests": [
            {
                "description": "Non-number maxContains: string",
                "data": {
                    "maxContains": "hello"
                },
                "valid": false
            },
            {
                "description": "Non-number maxContains: Boolean",
                "data": {
                    "maxContains": true
                },
                "valid": false
            },
            {
                "description": "Non-number maxContains: array",
                "data": {
                    "maxContains": []
                },
                "valid": false
            },
            {
                "description": "Non-number maxContains: object",
                "data": {
                    "maxContains": {}
                },
                "valid": false
            },
            {
                "description": "Non-number maxContains: null",
                "data": {
                    "maxContains": null
                },
                "valid": false
            },
            {
                "description": "maxContains is negative",
                "data": {
                    "maxContains": -1
                },
                "valid": false
            },
            {
                "description": "maxContains is floating-point",
                "data": {
                    "maxContains": 1.5
                },
                "valid": false
            },
            {
                "description": "Valid maxContains: integer",
                "data": {
                    "maxContains": 0
                },
                "valid": true
            }
        ]
    }
]
