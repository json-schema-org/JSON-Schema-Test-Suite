[
    {
        "description": "not",
        "schema": {
            "not": {"type": "integer"}
        },
        "tests": [
            {
                "description": "allowed",
                "data": "foo",
                "valid": true
            },
            {
                "description": "disallowed",
                "data": 1,
                "valid": false
            }
        ]
    },
    {
        "description": "not multiple types",
        "schema": {
            "not": {"type": ["integer", "boolean"]}
        },
        "tests": [
            {
                "description": "valid",
                "data": "foo",
                "valid": true
            },
            {
                "description": "mismatch",
                "data": 1,
                "valid": false
            },
            {
                "description": "other mismatch",
                "data": true,
                "valid": false
            }
        ]
    },
    {
        "description": "not more complex schema",
        "schema": {
            "not": {
                "type": "object",
                "properties": {
                    "foo": {
                        "type": "string"
                    }
                }
             }
        },
        "tests": [
            {
                "description": "match",
                "data": 1,
                "valid": true
            },
            {
                "description": "other match",
                "data": {"foo": 1},
                "valid": true
            },
            {
                "description": "mismatch",
                "data": {"foo": "bar"},
                "valid": false
            }
        ]
    },
    {
        "description": "forbidden property",
        "schema": {
            "properties": {
                "foo": { 
                    "not": {}
                }
            }
        },
        "tests": [
            {
                "description": "property present",
                "data": {"foo": 1, "bar": 2},
                "valid": false
            },
            {
                "description": "property absent",
                "data": {"bar": 1, "baz": 2},
                "valid": true
            }
        ]
    },
    {
        "description": "not with boolean schema true",
        "schema": {"not": true},
        "tests": [
            {
                "description": "any value is invalid",
                "data": "foo",
                "valid": false
            }
        ]
    },
    {
        "description": "not with boolean schema false",
        "schema": {"not": false},
        "tests": [
            {
                "description": "any value is valid",
                "data": "foo",
                "valid": true
            }
        ]
    },
    {
        "description": "Meta-schema applicator tests: Boolean logic",
        "schema": {
            "$ref": "https://json-schema.org/draft/2019-09/schema"
        },
        "tests": [
            {
                "description": "Non-schema not: number",
                "data": {
                    "not": 1
                },
                "valid": false
            },
            {
                "description": "Non-schema not: string",
                "data": {
                    "not": "hello"
                },
                "valid": false
            },
            {
                "description": "Non-schema not: array",
                "data": {
                    "not": []
                },
                "valid": false
            },
            {
                "description": "Non-schema not: null",
                "data": {
                    "not": null
                },
                "valid": false
            },
            {
                "description": "Boolean not",
                "data": {
                    "not": true
                },
                "valid": true
            },
            {
                "description": "Object not",
                "data": {
                    "not": {}
                },
                "valid": true
            }
        ]
    }
]
